{"ast":null,"code":"// getRecords.js - Fetches Kintone records, transforms response, & returns array of list items\n\n/**\n * Notes on Kintone responses:\n * record.title.value = value of the Title field\n * record.author.value = value of the Author field\n * record.Record_number.value = value of the Record number field (unique key for the record)\n */\n\n// Declare the GET endpoint defined in our Express server\nconst getRecordsEndpoint = 'http://localhost:5001/getData';\nexport default async function getRecords() {\n  const response = await fetch(getRecordsEndpoint);\n  const jsonResponse = await response.json();\n  console.log(jsonResponse);\n  let uniqueKey, task, completed;\n\n  // Map (1->1 transform) an array of records from the formatted API response to an array of list items\n  const ListItemArray = jsonResponse.records.map(record => {\n    uniqueKey = record.Record_number.value;\n    task = record.task.value;\n    completed = record.completed.value;\n    return {\n      id: uniqueKey,\n      text: task,\n      completed: completed\n    };\n  });\n  return ListItemArray;\n}\n;","map":{"version":3,"names":["getRecordsEndpoint","getRecords","response","fetch","jsonResponse","json","console","log","uniqueKey","task","completed","ListItemArray","records","map","record","Record_number","value","id","text"],"sources":["/Users/netrakrishnan/Desktop/brickhackX/frontend/src/requests/getRecords.js"],"sourcesContent":["// getRecords.js - Fetches Kintone records, transforms response, & returns array of list items\n\n/**\n * Notes on Kintone responses:\n * record.title.value = value of the Title field\n * record.author.value = value of the Author field\n * record.Record_number.value = value of the Record number field (unique key for the record)\n */\n\n// Declare the GET endpoint defined in our Express server\nconst getRecordsEndpoint = 'http://localhost:5001/getData';\n\nexport default async function getRecords() {\n  const response = await fetch(getRecordsEndpoint);\n  const jsonResponse = await response.json();\n\n  console.log(jsonResponse);\n\n  let uniqueKey, task, completed;\n\n  // Map (1->1 transform) an array of records from the formatted API response to an array of list items\n  const ListItemArray = jsonResponse.records.map(\n    record => {\n      uniqueKey = record.Record_number.value;\n      task = record.task.value;\n      completed = record.completed.value;\n\n      return {id:uniqueKey,text:task,completed:completed}\n    }\n  );\n\n  return ListItemArray;\n};"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,kBAAkB,GAAG,+BAA+B;AAE1D,eAAe,eAAeC,UAAUA,CAAA,EAAG;EACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,kBAAkB,CAAC;EAChD,MAAMI,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAE1CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;EAEzB,IAAII,SAAS,EAAEC,IAAI,EAAEC,SAAS;;EAE9B;EACA,MAAMC,aAAa,GAAGP,YAAY,CAACQ,OAAO,CAACC,GAAG,CAC5CC,MAAM,IAAI;IACRN,SAAS,GAAGM,MAAM,CAACC,aAAa,CAACC,KAAK;IACtCP,IAAI,GAAGK,MAAM,CAACL,IAAI,CAACO,KAAK;IACxBN,SAAS,GAAGI,MAAM,CAACJ,SAAS,CAACM,KAAK;IAElC,OAAO;MAACC,EAAE,EAACT,SAAS;MAACU,IAAI,EAACT,IAAI;MAACC,SAAS,EAACA;IAAS,CAAC;EACrD,CACF,CAAC;EAED,OAAOC,aAAa;AACtB;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}