{"ast":null,"code":"import { DAYS } from \"./conts\";\nexport const getDaysInMonth = date => {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n};\nexport const range = end => {\n  const {\n    result\n  } = Array.from({\n    length: end\n  }).reduce(({\n    result,\n    current\n  }) => ({\n    result: [...result, current],\n    current: current + 1\n  }), {\n    result: [],\n    current: 1\n  });\n  return result;\n};\nexport const sortDays = date => {\n  const dayIndex = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  const sortedDays = [...DAYS.slice(dayIndex), ...DAYS.slice(0, dayIndex)];\n  return sortedDays;\n};\nexport const datesAreOnSameDay = (first, second) => first.getFullYear() === second.getFullYear() && first.getMonth() === second.getMonth() && first.getDate() === second.getDate();\nexport const getMonthYear = date => {\n  const d = date.toDateString().split(\" \");\n  return `${d[1]} ${d[3]}`;\n};\nexport const nextMonth = (date, cb) => {\n  const mon = date.getMonth();\n  if (mon < 11) {\n    date.setMonth(mon + 1);\n  } else {\n    date.setMonth(0);\n    date.setFullYear(date.getFullYear() + 1);\n  }\n  cb(new Date(date));\n};\nexport const prevMonth = (date, cb) => {\n  const mon = date.getMonth();\n  if (mon > 0) {\n    date.setMonth(mon - 1);\n  } else {\n    date.setMonth(11);\n    date.setFullYear(date.getFullYear() - 1);\n  }\n  cb(new Date(date));\n};\nexport const getDarkColor = () => {\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += Math.floor(Math.random() * 10);\n  }\n  return color;\n};\nexport const getSortedDays = date => {\n  const daysInMonth = range(getDaysInMonth(date));\n  const index = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  return [...Array(index === 0 ? 6 : index - 1), ...daysInMonth];\n};","map":{"version":3,"names":["DAYS","getDaysInMonth","date","Date","getFullYear","getMonth","getDate","range","end","result","Array","from","length","reduce","current","sortDays","dayIndex","getDay","sortedDays","slice","datesAreOnSameDay","first","second","getMonthYear","d","toDateString","split","nextMonth","cb","mon","setMonth","setFullYear","prevMonth","getDarkColor","color","i","Math","floor","random","getSortedDays","daysInMonth","index"],"sources":["/Users/netrakrishnan/Desktop/brickhackX/src/utils.js"],"sourcesContent":["import { DAYS } from \"./conts\";\n\nexport const getDaysInMonth = (date) => {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n};\n\nexport const range = (end) => {\n  const { result } = Array.from({ length: end }).reduce(\n    ({ result, current }) => ({\n      result: [...result, current],\n      current: current + 1\n    }),\n    { result: [], current: 1 }\n  );\n  return result;\n};\n\nexport const sortDays = (date) => {\n  const dayIndex = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  const sortedDays = [...DAYS.slice(dayIndex), ...DAYS.slice(0, dayIndex)];\n  return sortedDays;\n};\n\nexport const datesAreOnSameDay = (first, second) =>\n  first.getFullYear() === second.getFullYear() &&\n  first.getMonth() === second.getMonth() &&\n  first.getDate() === second.getDate();\n\nexport const getMonthYear = (date) => {\n  const d = date.toDateString().split(\" \");\n  return `${d[1]} ${d[3]}`;\n};\n\nexport const nextMonth = (date, cb) => {\n  const mon = date.getMonth();\n  if (mon < 11) {\n    date.setMonth(mon + 1);\n  } else {\n    date.setMonth(0);\n    date.setFullYear(date.getFullYear() + 1);\n  }\n  cb(new Date(date));\n};\n\nexport const prevMonth = (date, cb) => {\n  const mon = date.getMonth();\n  if (mon > 0) {\n    date.setMonth(mon - 1);\n  } else {\n    date.setMonth(11);\n    date.setFullYear(date.getFullYear() - 1);\n  }\n  cb(new Date(date));\n};\n\nexport const getDarkColor = () => {\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += Math.floor(Math.random() * 10);\n  }\n  return color;\n};\n\nexport const getSortedDays = (date) => {\n  const daysInMonth = range(getDaysInMonth(date));\n  const index = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  return [...Array(index === 0 ? 6 : index - 1), ...daysInMonth];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}