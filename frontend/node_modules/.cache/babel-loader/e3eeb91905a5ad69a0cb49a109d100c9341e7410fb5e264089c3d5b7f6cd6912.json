{"ast":null,"code":"var _jsxFileName = \"/Users/netrakrishnan/Desktop/brickhackX/src/App.js\";\nimport { Calender } from \"./Calender\";\nimport { ToDo } from \"./ToDo\";\nimport { DndContext } from '@dnd-kit/core';\nimport \"./styles.css\";\nimport { Navbar } from \"./header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container-element\",\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        onDragEnd: handleDragEnd,\n        children: [/*#__PURE__*/_jsxDEV(Calender, {\n          className: \"grid-child-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n          className: \"grid-child-element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n  function handleDragEnd(event) {\n    const {\n      active,\n      over\n    } = event;\n    console.log(active.data.current);\n    console.log(ToDo.props.tasks);\n    if (over) {\n      // Calender.setEvent()\n    }\n  }\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Calender","ToDo","DndContext","Navbar","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","handleDragEnd","event","active","over","console","log","data","current","props","tasks","_c","$RefreshReg$"],"sources":["/Users/netrakrishnan/Desktop/brickhackX/src/App.js"],"sourcesContent":["import { Calender } from \"./Calender\";\nimport { ToDo} from \"./ToDo\";\nimport {DndContext} from '@dnd-kit/core';\nimport \"./styles.css\";\nimport {Navbar} from \"./header\";\n\n\nexport default function App() {\n  return (\n \n    <div className=\"App\">\n <Navbar/>\n <div className =\"grid-container-element\">\n    <DndContext onDragEnd={handleDragEnd}>\n     \n      <Calender className =\"grid-child-element\"/>\n      <ToDo className =\"grid-child-element\"/>\n    \n      </DndContext>\n    </div>\n    </div>\n  );\n  function handleDragEnd(event) {\n    const {active, over} = event;\n    console.log(active.data.current);\nconsole.log(ToDo.props.tasks);\n\n    if (over) {\n     // Calender.setEvent()\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,IAAI,QAAO,QAAQ;AAC5B,SAAQC,UAAU,QAAO,eAAe;AACxC,OAAO,cAAc;AACrB,SAAQC,MAAM,QAAO,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,oBAEED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACvBH,OAAA,CAACF,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTP,OAAA;MAAKE,SAAS,EAAE,wBAAwB;MAAAC,QAAA,eACrCH,OAAA,CAACH,UAAU;QAACW,SAAS,EAAEC,aAAc;QAAAN,QAAA,gBAEnCH,OAAA,CAACL,QAAQ;UAACO,SAAS,EAAE;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3CP,OAAA,CAACJ,IAAI;UAACM,SAAS,EAAE;QAAoB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;EAER,SAASE,aAAaA,CAACC,KAAK,EAAE;IAC5B,MAAM;MAACC,MAAM;MAAEC;IAAI,CAAC,GAAGF,KAAK;IAC5BG,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAACC,OAAO,CAAC;IACpCH,OAAO,CAACC,GAAG,CAAClB,IAAI,CAACqB,KAAK,CAACC,KAAK,CAAC;IAEzB,IAAIN,IAAI,EAAE;MACT;IAAA;EAEH;AACF;AAACO,EAAA,GAxBuBlB,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}